{"ast":null,"code":"var _jsxFileName = \"/Users/wubo/Desktop/graphql-card 2/redbubble-test/src/App.js\";\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport SearchBox from './components/SearchBox/SearchBox';\nimport Cameras from './components/Cameras/Cameras';\nimport FilteredCameras from './components/FilteredCameras/FilteredCameras';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: 'https://take-home-test-gql.herokuapp.com/query'\n});\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.state = {\n      card: [],\n      searchField: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n      {\n        works {\n          id\n          filename\n          exif {\n            model\n            make\n          }\n          urls {\n            type\n            link\n          }\n        }\n      }\n      `\n    }).then(res => {\n      this.setState({\n        card: res.data.works\n      });\n    });\n  }\n\n  render() {\n    const {\n      card,\n      searchField\n    } = this.state;\n    const filteredWork = card.filter(item => item.exif.model.toLowerCase().includes(searchField.toLocaleLowerCase()) || item.exif.make.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1\",\n        children: \"Camera Model and Make\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        placeholder: \"Type the model and make\",\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: searchField ? /*#__PURE__*/_jsxDEV(FilteredCameras, {\n          work: filteredWork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Cameras, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/wubo/Desktop/graphql-card 2/redbubble-test/src/App.js"],"names":["React","ApolloProvider","createHttpLink","InMemoryCache","ApolloClient","gql","SearchBox","Cameras","FilteredCameras","httpLink","uri","cache","client","link","App","Component","constructor","handleChange","e","setState","searchField","target","value","state","card","bind","componentDidMount","query","then","res","data","works","render","filteredWork","filter","item","exif","model","toLowerCase","includes","toLocaleLowerCase","make"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,YAAT,EAAuBC,GAAvB,QAAkC,cAAlC;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AAEA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAGP,cAAc,CAAC;AAC9BQ,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,KAAK,GAAG,IAAIR,aAAJ,EAAd;AAEA,MAAMS,MAAM,GAAG,IAAIR,YAAJ,CAAiB;AAC9BS,EAAAA,IAAI,EAAEJ,QADwB;AAE9BE,EAAAA;AAF8B,CAAjB,CAAf;;AAKA,MAAMG,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkCdC,YAlCc,GAkCEC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd;AACD,KApCa;;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,EADM;AAEXJ,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKH,YAAL,GAAoB,KAAKA,YAAL,CAAkBQ,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,MAAM,CAACe,KAAP,CAAa;AACXA,MAAAA,KAAK,EAAEtB,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBiB,KAAb,EAkBCuB,IAlBD,CAkBMC,GAAG,IAAI;AACX,WAAKV,QAAL,CAAc;AAAEK,QAAAA,IAAI,EAAEK,GAAG,CAACC,IAAJ,CAASC;AAAjB,OAAd;AACD,KApBD;AAqBD;;AAMDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAER,MAAAA,IAAF;AAAQJ,MAAAA;AAAR,QAAuB,KAAKG,KAAlC;AACA,UAAMU,YAAY,GAAGT,IAAI,CAACU,MAAL,CAAYC,IAAI,IACnCA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuCnB,WAAW,CAACoB,iBAAZ,EAAvC,KACGL,IAAI,CAACC,IAAL,CAAUK,IAAV,CAAeH,WAAf,GAA6BC,QAA7B,CAAsCnB,WAAW,CAACoB,iBAAZ,EAAtC,CAFgB,CAArB;AAKA,wBACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAE5B,MAAxB;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,yBAAvB;AAAiD,QAAA,YAAY,EAAE,KAAKK;AAApE;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGG,WAAW,gBAAG,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEa;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA6C,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAD3D;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAvD+B;;AAwDjC;AAED,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http'; \nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport SearchBox from './components/SearchBox/SearchBox';\nimport Cameras from './components/Cameras/Cameras';\nimport FilteredCameras from './components/FilteredCameras/FilteredCameras';\n\nimport './App.css';\n\nconst httpLink = createHttpLink({\n  uri: 'https://take-home-test-gql.herokuapp.com/query'\n});\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n}) \n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      card:[],\n      searchField: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n      {\n        works {\n          id\n          filename\n          exif {\n            model\n            make\n          }\n          urls {\n            type\n            link\n          }\n        }\n      }\n      `\n    })\n    .then(res => {\n      this.setState({ card: res.data.works })\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render () {\n    const { card, searchField } =this.state;\n    const filteredWork = card.filter(item => \n      item.exif.model.toLowerCase().includes(searchField.toLocaleLowerCase())\n      || item.exif.make.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n  \n    return (\n      <ApolloProvider client={client}>\n      <h1 className='h1'>Camera Model and Make</h1>\n      <SearchBox placeholder='Type the model and make' handleChange={this.handleChange} />\n      <div className=\"App\">\n        {searchField ? <FilteredCameras work={filteredWork} /> : <Cameras /> }\n      </div>\n    </ApolloProvider>\n    )\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}