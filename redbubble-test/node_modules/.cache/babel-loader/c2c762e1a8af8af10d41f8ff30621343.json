{"ast":null,"code":"\"use strict\";\n/**\n *  Copyright (c) Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Provided optional previous operations and selected name, and a next list of\n * operations, determine what the next selected operation should be.\n */\n\nfunction getSelectedOperationName(prevOperations, prevSelectedOperationName, operations) {\n  // If there are not enough operations to bother with, return nothing.\n  if (!operations || operations.length < 1) {\n    return;\n  } // If a previous selection still exists, continue to use it.\n\n\n  var names = operations.map(function (op) {\n    return op.name && op.name.value;\n  });\n\n  if (prevSelectedOperationName && names.indexOf(prevSelectedOperationName) !== -1) {\n    return prevSelectedOperationName;\n  } // If a previous selection was the Nth operation, use the same Nth.\n\n\n  if (prevSelectedOperationName && prevOperations) {\n    var prevNames = prevOperations.map(function (op) {\n      return op.name && op.name.value;\n    });\n    var prevIndex = prevNames.indexOf(prevSelectedOperationName);\n\n    if (prevIndex !== -1 && prevIndex < names.length) {\n      return names[prevIndex];\n    }\n  } // Use the first operation.\n\n\n  return names[0];\n}\n\nexports[\"default\"] = getSelectedOperationName;","map":{"version":3,"sources":["/Users/wubo/Desktop/card-design/card-design/node_modules/graphql-playground-react/lib/components/Playground/util/getSelectedOperationName.js"],"names":["Object","defineProperty","exports","value","getSelectedOperationName","prevOperations","prevSelectedOperationName","operations","length","names","map","op","name","indexOf","prevNames","prevIndex"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGA;AACA;AACA;AACA;;AAEA,SAASC,wBAAT,CAAkCC,cAAlC,EAAkDC,yBAAlD,EAA6EC,UAA7E,EAAyF;AACvF;AACA,MAAI,CAACA,UAAD,IAAeA,UAAU,CAACC,MAAX,GAAoB,CAAvC,EAA0C;AACxC;AACD,GAJsF,CAIrF;;;AAGF,MAAIC,KAAK,GAAGF,UAAU,CAACG,GAAX,CAAe,UAAUC,EAAV,EAAc;AACvC,WAAOA,EAAE,CAACC,IAAH,IAAWD,EAAE,CAACC,IAAH,CAAQT,KAA1B;AACD,GAFW,CAAZ;;AAIA,MAAIG,yBAAyB,IAAIG,KAAK,CAACI,OAAN,CAAcP,yBAAd,MAA6C,CAAC,CAA/E,EAAkF;AAChF,WAAOA,yBAAP;AACD,GAbsF,CAarF;;;AAGF,MAAIA,yBAAyB,IAAID,cAAjC,EAAiD;AAC/C,QAAIS,SAAS,GAAGT,cAAc,CAACK,GAAf,CAAmB,UAAUC,EAAV,EAAc;AAC/C,aAAOA,EAAE,CAACC,IAAH,IAAWD,EAAE,CAACC,IAAH,CAAQT,KAA1B;AACD,KAFe,CAAhB;AAGA,QAAIY,SAAS,GAAGD,SAAS,CAACD,OAAV,CAAkBP,yBAAlB,CAAhB;;AAEA,QAAIS,SAAS,KAAK,CAAC,CAAf,IAAoBA,SAAS,GAAGN,KAAK,CAACD,MAA1C,EAAkD;AAChD,aAAOC,KAAK,CAACM,SAAD,CAAZ;AACD;AACF,GAzBsF,CAyBrF;;;AAGF,SAAON,KAAK,CAAC,CAAD,CAAZ;AACD;;AAEDP,OAAO,CAAC,SAAD,CAAP,GAAqBE,wBAArB","sourcesContent":["\"use strict\";\n/**\n *  Copyright (c) Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Provided optional previous operations and selected name, and a next list of\n * operations, determine what the next selected operation should be.\n */\n\nfunction getSelectedOperationName(prevOperations, prevSelectedOperationName, operations) {\n  // If there are not enough operations to bother with, return nothing.\n  if (!operations || operations.length < 1) {\n    return;\n  } // If a previous selection still exists, continue to use it.\n\n\n  var names = operations.map(function (op) {\n    return op.name && op.name.value;\n  });\n\n  if (prevSelectedOperationName && names.indexOf(prevSelectedOperationName) !== -1) {\n    return prevSelectedOperationName;\n  } // If a previous selection was the Nth operation, use the same Nth.\n\n\n  if (prevSelectedOperationName && prevOperations) {\n    var prevNames = prevOperations.map(function (op) {\n      return op.name && op.name.value;\n    });\n    var prevIndex = prevNames.indexOf(prevSelectedOperationName);\n\n    if (prevIndex !== -1 && prevIndex < names.length) {\n      return names[prevIndex];\n    }\n  } // Use the first operation.\n\n\n  return names[0];\n}\n\nexports[\"default\"] = getSelectedOperationName;"]},"metadata":{},"sourceType":"script"}