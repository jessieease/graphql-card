{"ast":null,"code":"\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_actions_1 = require(\"redux-actions\");\n\nexports.editQuery = (_a = redux_actions_1.createActions({\n  // simple property setting\n  EDIT_QUERY: function EDIT_QUERY(query) {\n    return {\n      query: query\n    };\n  },\n  EDIT_HEADERS: simpleAction('headers'),\n  EDIT_ENDPOINT: simpleAction('endpoint'),\n  EDIT_VARIABLES: simpleAction('variables'),\n  SET_OPERATION_NAME: simpleAction('operationName'),\n  SET_VARIABLE_TO_TYPE: simpleAction('variableToType'),\n  SET_OPERATIONS: simpleAction('operations'),\n  SET_EDITOR_FLEX: simpleAction('editorFlex'),\n  EDIT_NAME: simpleAction('name'),\n  OPEN_QUERY_VARIABLES: function OPEN_QUERY_VARIABLES() {\n    return {\n      queryVariablesActive: true\n    };\n  },\n  CLOSE_QUERY_VARIABLES: function CLOSE_QUERY_VARIABLES() {\n    return {\n      queryVariablesActive: false\n    };\n  },\n  SET_VARIABLE_EDITOR_HEIGHT: simpleAction('variableEditorHeight'),\n  SET_RESPONSE_TRACING_HEIGHT: simpleAction('responceTracingHeight'),\n  SET_TRACING_SUPPORTED: simpleAction('tracingSupported'),\n  SET_SUBSCRIPTION_ACTIVE: simpleAction('subscriptionActive'),\n  SET_QUERY_TYPES: simpleAction('queryTypes'),\n  SET_RESPONSE_EXTENSIONS: simpleAction('responseExtensions'),\n  SET_CURRENT_QUERY_START_TIME: simpleAction('currentQueryStartTime'),\n  SET_CURRENT_QUERY_END_TIME: simpleAction('currentQueryEndTime'),\n  UPDATE_QUERY_FACTS: simpleAction(),\n  PRETTIFY_QUERY: simpleAction(),\n  INJECT_HEADERS: function INJECT_HEADERS(headers, endpoint) {\n    return {\n      headers: headers,\n      endpoint: endpoint\n    };\n  },\n  // setting multiple props\n\n  /*\n    this.setState({\n      responseTracingOpen: false,\n      responseTracingHeight: hadHeight,\n    } as State)\n  */\n  CLOSE_TRACING: simpleAction('responseTracingHeight'),\n  OPEN_TRACING: simpleAction('responseTracingHeight'),\n  TOGGLE_TRACING: simpleAction(),\n  // setting multiple props\n\n  /*\n    this.setState({\n      responseTracingOpen: false,\n      responseTracingHeight: hadHeight,\n    } as State)\n  */\n  CLOSE_VARIABLES: simpleAction('variableEditorHeight'),\n  OPEN_VARIABLES: simpleAction('variableEditorHeight'),\n  TOGGLE_VARIABLES: simpleAction(),\n\n  /*\n    a littlebit more complex state mutations\n  */\n  ADD_RESPONSE: function ADD_RESPONSE(workspaceId, sessionId, response) {\n    return {\n      workspaceId: workspaceId,\n      sessionId: sessionId,\n      response: response\n    };\n  },\n  SET_RESPONSE: function SET_RESPONSE(workspaceId, sessionId, response) {\n    return {\n      workspaceId: workspaceId,\n      sessionId: sessionId,\n      response: response\n    };\n  },\n  CLEAR_RESPONSES: simpleAction(),\n  FETCH_SCHEMA: simpleAction(),\n  REFETCH_SCHEMA: simpleAction(),\n  SET_ENDPOINT_UNREACHABLE: simpleAction('endpoint'),\n  SET_SCROLL_TOP: function SET_SCROLL_TOP(sessionId, scrollTop) {\n    return {\n      sessionId: sessionId,\n      scrollTop: scrollTop\n    };\n  },\n  SCHEMA_FETCHING_SUCCESS: function SCHEMA_FETCHING_SUCCESS(endpoint, tracingSupported, isPollingSchema) {\n    return {\n      endpoint: endpoint,\n      tracingSupported: tracingSupported,\n      isPollingSchema: isPollingSchema\n    };\n  },\n\n  /*\n        this.setState({\n          schema,\n          isReloadingSchema: false,\n          endpointUnreachable: false,\n          + tracingSupported\n        })\n  */\n  SCHEMA_FETCHING_ERROR: function SCHEMA_FETCHING_ERROR(endpoint, error) {\n    return {\n      endpoint: endpoint,\n      error: error\n    };\n  },\n\n  /*\n         this.setState({\n        isReloadingSchema: false,\n        endpointUnreachable: true,\n      })\n  */\n  RENEW_STACKS: simpleAction(),\n\n  /*\n  GraphQLEditor.renewStacks()\n  */\n  RUN_QUERY: function RUN_QUERY(operationName) {\n    return {\n      operationName: operationName\n    };\n  },\n  QUERY_SUCCESS: simpleAction(),\n  QUERY_ERROR: simpleAction(),\n  RUN_QUERY_AT_POSITION: function RUN_QUERY_AT_POSITION(position) {\n    return {\n      position: position\n    };\n  },\n  START_QUERY: simpleAction('queryRunning', true),\n  STOP_QUERY: function STOP_QUERY(sessionId, workspaceId) {\n    return {\n      workspaceId: workspaceId,\n      sessionId: sessionId\n    };\n  },\n\n  /* GraphQLEditor.handleRunQuery */\n  OPEN_SETTINGS_TAB: function OPEN_SETTINGS_TAB() {\n    return {};\n  },\n  OPEN_CONFIG_TAB: function OPEN_CONFIG_TAB() {\n    return {};\n  },\n  NEW_SESSION: function NEW_SESSION(endpoint, reuseHeaders) {\n    return {\n      endpoint: endpoint,\n      reuseHeaders: reuseHeaders\n    };\n  },\n  NEW_SESSION_FROM_QUERY: function NEW_SESSION_FROM_QUERY(query) {\n    return {\n      query: query\n    };\n  },\n  NEW_FILE_TAB: function NEW_FILE_TAB(fileName, filePath, file) {\n    return {\n      fileName: fileName,\n      filePath: filePath,\n      file: file\n    };\n  },\n  DUPLICATE_SESSION: simpleAction('session'),\n  CLOSE_SELECTED_TAB: function CLOSE_SELECTED_TAB() {\n    return {};\n  },\n  SELECT_NEXT_TAB: function SELECT_NEXT_TAB() {\n    return {};\n  },\n  SELECT_PREV_TAB: function SELECT_PREV_TAB() {\n    return {};\n  },\n  SELECT_TAB: simpleAction('sessionId'),\n  SELECT_TAB_INDEX: simpleAction('index'),\n  CLOSE_TAB: simpleAction('sessionId'),\n  REORDER_TABS: function REORDER_TABS(src, dest) {\n    return {\n      src: src,\n      dest: dest\n    };\n  },\n  // files, settings, config\n  EDIT_SETTINGS: simpleAction(),\n  SAVE_SETTINGS: simpleAction(),\n  EDIT_CONFIG: simpleAction(),\n  SAVE_CONFIG: simpleAction(),\n  EDIT_FILE: simpleAction(),\n  SAVE_FILE: simpleAction()\n}), _a.editQuery), exports.editVariables = _a.editVariables, exports.setOperationName = _a.setOperationName, exports.editHeaders = _a.editHeaders, exports.editEndpoint = _a.editEndpoint, exports.setVariableToType = _a.setVariableToType, exports.setOperations = _a.setOperations, exports.startQuery = _a.startQuery, exports.stopQuery = _a.stopQuery, exports.setEditorFlex = _a.setEditorFlex, exports.openQueryVariables = _a.openQueryVariables, exports.closeQueryVariables = _a.closeQueryVariables, exports.setVariableEditorHeight = _a.setVariableEditorHeight, exports.setResponseTracingHeight = _a.setResponseTracingHeight, exports.setTracingSupported = _a.setTracingSupported, exports.closeTracing = _a.closeTracing, exports.openTracing = _a.openTracing, exports.closeVariables = _a.closeVariables, exports.openVariables = _a.openVariables, exports.addResponse = _a.addResponse, exports.setResponse = _a.setResponse, exports.clearResponses = _a.clearResponses, exports.openSettingsTab = _a.openSettingsTab, exports.schemaFetchingSuccess = _a.schemaFetchingSuccess, exports.schemaFetchingError = _a.schemaFetchingError, exports.setEndpointUnreachable = _a.setEndpointUnreachable, exports.renewStacks = _a.renewStacks, exports.runQuery = _a.runQuery, exports.prettifyQuery = _a.prettifyQuery, exports.fetchSchema = _a.fetchSchema, exports.updateQueryFacts = _a.updateQueryFacts, exports.runQueryAtPosition = _a.runQueryAtPosition, exports.toggleTracing = _a.toggleTracing, exports.toggleVariables = _a.toggleVariables, exports.newSession = _a.newSession, exports.newSessionFromQuery = _a.newSessionFromQuery, exports.newFileTab = _a.newFileTab, exports.closeTab = _a.closeTab, exports.closeSelectedTab = _a.closeSelectedTab, exports.editSettings = _a.editSettings, exports.saveSettings = _a.saveSettings, exports.editConfig = _a.editConfig, exports.saveConfig = _a.saveConfig, exports.editFile = _a.editFile, exports.saveFile = _a.saveFile, exports.selectTab = _a.selectTab, exports.selectTabIndex = _a.selectTabIndex, exports.selectNextTab = _a.selectNextTab, exports.selectPrevTab = _a.selectPrevTab, exports.duplicateSession = _a.duplicateSession, exports.querySuccess = _a.querySuccess, exports.queryError = _a.queryError, exports.setSubscriptionActive = _a.setSubscriptionActive, exports.setQueryTypes = _a.setQueryTypes, exports.injectHeaders = _a.injectHeaders, exports.openConfigTab = _a.openConfigTab, exports.editName = _a.editName, exports.setResponseExtensions = _a.setResponseExtensions, exports.setCurrentQueryStartTime = _a.setCurrentQueryStartTime, exports.setCurrentQueryEndTime = _a.setCurrentQueryEndTime, exports.refetchSchema = _a.refetchSchema, exports.setScrollTop = _a.setScrollTop, exports.reorderTabs = _a.reorderTabs;\n\nfunction simpleAction(key, defaultValue) {\n  return function (value) {\n    var _a;\n\n    return _a = {}, _a[key] = value || defaultValue, _a;\n  };\n}","map":{"version":3,"sources":["/Users/wubo/Desktop/card-design/card-design/node_modules/graphql-playground-react/lib/state/sessions/actions.js"],"names":["_a","Object","defineProperty","exports","value","redux_actions_1","require","editQuery","createActions","EDIT_QUERY","query","EDIT_HEADERS","simpleAction","EDIT_ENDPOINT","EDIT_VARIABLES","SET_OPERATION_NAME","SET_VARIABLE_TO_TYPE","SET_OPERATIONS","SET_EDITOR_FLEX","EDIT_NAME","OPEN_QUERY_VARIABLES","queryVariablesActive","CLOSE_QUERY_VARIABLES","SET_VARIABLE_EDITOR_HEIGHT","SET_RESPONSE_TRACING_HEIGHT","SET_TRACING_SUPPORTED","SET_SUBSCRIPTION_ACTIVE","SET_QUERY_TYPES","SET_RESPONSE_EXTENSIONS","SET_CURRENT_QUERY_START_TIME","SET_CURRENT_QUERY_END_TIME","UPDATE_QUERY_FACTS","PRETTIFY_QUERY","INJECT_HEADERS","headers","endpoint","CLOSE_TRACING","OPEN_TRACING","TOGGLE_TRACING","CLOSE_VARIABLES","OPEN_VARIABLES","TOGGLE_VARIABLES","ADD_RESPONSE","workspaceId","sessionId","response","SET_RESPONSE","CLEAR_RESPONSES","FETCH_SCHEMA","REFETCH_SCHEMA","SET_ENDPOINT_UNREACHABLE","SET_SCROLL_TOP","scrollTop","SCHEMA_FETCHING_SUCCESS","tracingSupported","isPollingSchema","SCHEMA_FETCHING_ERROR","error","RENEW_STACKS","RUN_QUERY","operationName","QUERY_SUCCESS","QUERY_ERROR","RUN_QUERY_AT_POSITION","position","START_QUERY","STOP_QUERY","OPEN_SETTINGS_TAB","OPEN_CONFIG_TAB","NEW_SESSION","reuseHeaders","NEW_SESSION_FROM_QUERY","NEW_FILE_TAB","fileName","filePath","file","DUPLICATE_SESSION","CLOSE_SELECTED_TAB","SELECT_NEXT_TAB","SELECT_PREV_TAB","SELECT_TAB","SELECT_TAB_INDEX","CLOSE_TAB","REORDER_TABS","src","dest","EDIT_SETTINGS","SAVE_SETTINGS","EDIT_CONFIG","SAVE_CONFIG","EDIT_FILE","SAVE_FILE","editVariables","setOperationName","editHeaders","editEndpoint","setVariableToType","setOperations","startQuery","stopQuery","setEditorFlex","openQueryVariables","closeQueryVariables","setVariableEditorHeight","setResponseTracingHeight","setTracingSupported","closeTracing","openTracing","closeVariables","openVariables","addResponse","setResponse","clearResponses","openSettingsTab","schemaFetchingSuccess","schemaFetchingError","setEndpointUnreachable","renewStacks","runQuery","prettifyQuery","fetchSchema","updateQueryFacts","runQueryAtPosition","toggleTracing","toggleVariables","newSession","newSessionFromQuery","newFileTab","closeTab","closeSelectedTab","editSettings","saveSettings","editConfig","saveConfig","editFile","saveFile","selectTab","selectTabIndex","selectNextTab","selectPrevTab","duplicateSession","querySuccess","queryError","setSubscriptionActive","setQueryTypes","injectHeaders","openConfigTab","editName","setResponseExtensions","setCurrentQueryStartTime","setCurrentQueryEndTime","refetchSchema","setScrollTop","reorderTabs","key","defaultValue"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_actions_1 = require(\"redux-actions\");\n\nexports.editQuery = (_a = redux_actions_1.createActions({\n  // simple property setting\n  EDIT_QUERY: function EDIT_QUERY(query) {\n    return {\n      query: query\n    };\n  },\n  EDIT_HEADERS: simpleAction('headers'),\n  EDIT_ENDPOINT: simpleAction('endpoint'),\n  EDIT_VARIABLES: simpleAction('variables'),\n  SET_OPERATION_NAME: simpleAction('operationName'),\n  SET_VARIABLE_TO_TYPE: simpleAction('variableToType'),\n  SET_OPERATIONS: simpleAction('operations'),\n  SET_EDITOR_FLEX: simpleAction('editorFlex'),\n  EDIT_NAME: simpleAction('name'),\n  OPEN_QUERY_VARIABLES: function OPEN_QUERY_VARIABLES() {\n    return {\n      queryVariablesActive: true\n    };\n  },\n  CLOSE_QUERY_VARIABLES: function CLOSE_QUERY_VARIABLES() {\n    return {\n      queryVariablesActive: false\n    };\n  },\n  SET_VARIABLE_EDITOR_HEIGHT: simpleAction('variableEditorHeight'),\n  SET_RESPONSE_TRACING_HEIGHT: simpleAction('responceTracingHeight'),\n  SET_TRACING_SUPPORTED: simpleAction('tracingSupported'),\n  SET_SUBSCRIPTION_ACTIVE: simpleAction('subscriptionActive'),\n  SET_QUERY_TYPES: simpleAction('queryTypes'),\n  SET_RESPONSE_EXTENSIONS: simpleAction('responseExtensions'),\n  SET_CURRENT_QUERY_START_TIME: simpleAction('currentQueryStartTime'),\n  SET_CURRENT_QUERY_END_TIME: simpleAction('currentQueryEndTime'),\n  UPDATE_QUERY_FACTS: simpleAction(),\n  PRETTIFY_QUERY: simpleAction(),\n  INJECT_HEADERS: function INJECT_HEADERS(headers, endpoint) {\n    return {\n      headers: headers,\n      endpoint: endpoint\n    };\n  },\n  // setting multiple props\n\n  /*\n    this.setState({\n      responseTracingOpen: false,\n      responseTracingHeight: hadHeight,\n    } as State)\n  */\n  CLOSE_TRACING: simpleAction('responseTracingHeight'),\n  OPEN_TRACING: simpleAction('responseTracingHeight'),\n  TOGGLE_TRACING: simpleAction(),\n  // setting multiple props\n\n  /*\n    this.setState({\n      responseTracingOpen: false,\n      responseTracingHeight: hadHeight,\n    } as State)\n  */\n  CLOSE_VARIABLES: simpleAction('variableEditorHeight'),\n  OPEN_VARIABLES: simpleAction('variableEditorHeight'),\n  TOGGLE_VARIABLES: simpleAction(),\n\n  /*\n    a littlebit more complex state mutations\n  */\n  ADD_RESPONSE: function ADD_RESPONSE(workspaceId, sessionId, response) {\n    return {\n      workspaceId: workspaceId,\n      sessionId: sessionId,\n      response: response\n    };\n  },\n  SET_RESPONSE: function SET_RESPONSE(workspaceId, sessionId, response) {\n    return {\n      workspaceId: workspaceId,\n      sessionId: sessionId,\n      response: response\n    };\n  },\n  CLEAR_RESPONSES: simpleAction(),\n  FETCH_SCHEMA: simpleAction(),\n  REFETCH_SCHEMA: simpleAction(),\n  SET_ENDPOINT_UNREACHABLE: simpleAction('endpoint'),\n  SET_SCROLL_TOP: function SET_SCROLL_TOP(sessionId, scrollTop) {\n    return {\n      sessionId: sessionId,\n      scrollTop: scrollTop\n    };\n  },\n  SCHEMA_FETCHING_SUCCESS: function SCHEMA_FETCHING_SUCCESS(endpoint, tracingSupported, isPollingSchema) {\n    return {\n      endpoint: endpoint,\n      tracingSupported: tracingSupported,\n      isPollingSchema: isPollingSchema\n    };\n  },\n\n  /*\n        this.setState({\n          schema,\n          isReloadingSchema: false,\n          endpointUnreachable: false,\n          + tracingSupported\n        })\n  */\n  SCHEMA_FETCHING_ERROR: function SCHEMA_FETCHING_ERROR(endpoint, error) {\n    return {\n      endpoint: endpoint,\n      error: error\n    };\n  },\n\n  /*\n         this.setState({\n        isReloadingSchema: false,\n        endpointUnreachable: true,\n      })\n  */\n  RENEW_STACKS: simpleAction(),\n\n  /*\n  GraphQLEditor.renewStacks()\n  */\n  RUN_QUERY: function RUN_QUERY(operationName) {\n    return {\n      operationName: operationName\n    };\n  },\n  QUERY_SUCCESS: simpleAction(),\n  QUERY_ERROR: simpleAction(),\n  RUN_QUERY_AT_POSITION: function RUN_QUERY_AT_POSITION(position) {\n    return {\n      position: position\n    };\n  },\n  START_QUERY: simpleAction('queryRunning', true),\n  STOP_QUERY: function STOP_QUERY(sessionId, workspaceId) {\n    return {\n      workspaceId: workspaceId,\n      sessionId: sessionId\n    };\n  },\n\n  /* GraphQLEditor.handleRunQuery */\n  OPEN_SETTINGS_TAB: function OPEN_SETTINGS_TAB() {\n    return {};\n  },\n  OPEN_CONFIG_TAB: function OPEN_CONFIG_TAB() {\n    return {};\n  },\n  NEW_SESSION: function NEW_SESSION(endpoint, reuseHeaders) {\n    return {\n      endpoint: endpoint,\n      reuseHeaders: reuseHeaders\n    };\n  },\n  NEW_SESSION_FROM_QUERY: function NEW_SESSION_FROM_QUERY(query) {\n    return {\n      query: query\n    };\n  },\n  NEW_FILE_TAB: function NEW_FILE_TAB(fileName, filePath, file) {\n    return {\n      fileName: fileName,\n      filePath: filePath,\n      file: file\n    };\n  },\n  DUPLICATE_SESSION: simpleAction('session'),\n  CLOSE_SELECTED_TAB: function CLOSE_SELECTED_TAB() {\n    return {};\n  },\n  SELECT_NEXT_TAB: function SELECT_NEXT_TAB() {\n    return {};\n  },\n  SELECT_PREV_TAB: function SELECT_PREV_TAB() {\n    return {};\n  },\n  SELECT_TAB: simpleAction('sessionId'),\n  SELECT_TAB_INDEX: simpleAction('index'),\n  CLOSE_TAB: simpleAction('sessionId'),\n  REORDER_TABS: function REORDER_TABS(src, dest) {\n    return {\n      src: src,\n      dest: dest\n    };\n  },\n  // files, settings, config\n  EDIT_SETTINGS: simpleAction(),\n  SAVE_SETTINGS: simpleAction(),\n  EDIT_CONFIG: simpleAction(),\n  SAVE_CONFIG: simpleAction(),\n  EDIT_FILE: simpleAction(),\n  SAVE_FILE: simpleAction()\n}), _a.editQuery), exports.editVariables = _a.editVariables, exports.setOperationName = _a.setOperationName, exports.editHeaders = _a.editHeaders, exports.editEndpoint = _a.editEndpoint, exports.setVariableToType = _a.setVariableToType, exports.setOperations = _a.setOperations, exports.startQuery = _a.startQuery, exports.stopQuery = _a.stopQuery, exports.setEditorFlex = _a.setEditorFlex, exports.openQueryVariables = _a.openQueryVariables, exports.closeQueryVariables = _a.closeQueryVariables, exports.setVariableEditorHeight = _a.setVariableEditorHeight, exports.setResponseTracingHeight = _a.setResponseTracingHeight, exports.setTracingSupported = _a.setTracingSupported, exports.closeTracing = _a.closeTracing, exports.openTracing = _a.openTracing, exports.closeVariables = _a.closeVariables, exports.openVariables = _a.openVariables, exports.addResponse = _a.addResponse, exports.setResponse = _a.setResponse, exports.clearResponses = _a.clearResponses, exports.openSettingsTab = _a.openSettingsTab, exports.schemaFetchingSuccess = _a.schemaFetchingSuccess, exports.schemaFetchingError = _a.schemaFetchingError, exports.setEndpointUnreachable = _a.setEndpointUnreachable, exports.renewStacks = _a.renewStacks, exports.runQuery = _a.runQuery, exports.prettifyQuery = _a.prettifyQuery, exports.fetchSchema = _a.fetchSchema, exports.updateQueryFacts = _a.updateQueryFacts, exports.runQueryAtPosition = _a.runQueryAtPosition, exports.toggleTracing = _a.toggleTracing, exports.toggleVariables = _a.toggleVariables, exports.newSession = _a.newSession, exports.newSessionFromQuery = _a.newSessionFromQuery, exports.newFileTab = _a.newFileTab, exports.closeTab = _a.closeTab, exports.closeSelectedTab = _a.closeSelectedTab, exports.editSettings = _a.editSettings, exports.saveSettings = _a.saveSettings, exports.editConfig = _a.editConfig, exports.saveConfig = _a.saveConfig, exports.editFile = _a.editFile, exports.saveFile = _a.saveFile, exports.selectTab = _a.selectTab, exports.selectTabIndex = _a.selectTabIndex, exports.selectNextTab = _a.selectNextTab, exports.selectPrevTab = _a.selectPrevTab, exports.duplicateSession = _a.duplicateSession, exports.querySuccess = _a.querySuccess, exports.queryError = _a.queryError, exports.setSubscriptionActive = _a.setSubscriptionActive, exports.setQueryTypes = _a.setQueryTypes, exports.injectHeaders = _a.injectHeaders, exports.openConfigTab = _a.openConfigTab, exports.editName = _a.editName, exports.setResponseExtensions = _a.setResponseExtensions, exports.setCurrentQueryStartTime = _a.setCurrentQueryStartTime, exports.setCurrentQueryEndTime = _a.setCurrentQueryEndTime, exports.refetchSchema = _a.refetchSchema, exports.setScrollTop = _a.setScrollTop, exports.reorderTabs = _a.reorderTabs;\n\nfunction simpleAction(key, defaultValue) {\n  return function (value) {\n    var _a;\n\n    return _a = {}, _a[key] = value || defaultValue, _a;\n  };\n}"]},"metadata":{},"sourceType":"script"}