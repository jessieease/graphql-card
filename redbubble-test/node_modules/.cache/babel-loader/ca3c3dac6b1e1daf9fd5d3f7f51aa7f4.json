{"ast":null,"code":"\"use strict\";\n\nvar __assign = void 0 && (void 0).__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar graphql_1 = require(\"graphql\");\n\nvar stack_1 = require(\"./stack\");\n\nvar utils_1 = require(\"../../../utils\");\n\nvar defaultTypes = ['__Schema', '__Directive', '__DirectiveLocation', '__Type', '__Field', '__InputValue', '__EnumValue', '__TypeKind', 'String', 'ID', 'Boolean', 'Int', 'Float'];\n/* Creates an array of SchemaTypes for the SDLFieldDocs\n(A component that is similar to the DocsExplorer) to consume */\n\nfunction sdlArray(schema, options) {\n  var objectValues = Object.values || function (obj) {\n    return Object.keys(obj).map(function (key) {\n      return obj[key];\n    });\n  };\n\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(function (type) {\n    return !defaultTypes.includes(type.name);\n  }).map(function (type) {\n    return __assign(__assign(__assign({}, type), stack_1.serialize(schema, type)), {\n      instanceOf: getTypeInstance(type)\n    });\n  });\n  return types;\n}\n\nexports.sdlArray = sdlArray;\n\nfunction getTypeInstance(type) {\n  if (type instanceof graphql_1.GraphQLInterfaceType) {\n    return 'interface';\n  } else if (type instanceof graphql_1.GraphQLUnionType) {\n    return 'union';\n  } else if (type instanceof graphql_1.GraphQLEnumType) {\n    return 'enum';\n  } else if (type instanceof graphql_1.GraphQLInputObjectType) {\n    return 'input';\n  } else {\n    return 'type';\n  }\n} // Returns a prettified schema\n\n\nfunction getSDL(schema, commentsDisabled) {\n  if (commentsDisabled === void 0) {\n    commentsDisabled = true;\n  }\n\n  if (schema instanceof graphql_1.GraphQLSchema) {\n    var rawSdl = graphql_1.printSchema(schema, {\n      commentDescriptions: true\n    });\n\n    if (commentsDisabled) {\n      // Removes Comments but still has new lines\n      // Removes newlines left behind by Comments\n      return utils_1.prettify(rawSdl, {\n        printWidth: 80,\n        tabWidth: 2,\n        useTabs: false\n      });\n    }\n\n    return utils_1.prettify(rawSdl, {\n      printWidth: 80,\n      tabWidth: 2,\n      useTabs: false\n    });\n  }\n\n  return '';\n}\n\nexports.getSDL = getSDL; // Downloads the schema in either .json or .graphql format\n\nfunction downloadSchema(schema, type) {\n  if (type === 'sdl') {\n    var data = getSDL(schema, false);\n    var filename = 'schema.graphql';\n    return download(data, filename);\n  } else {\n    var data = JSON.stringify(schema);\n    var filename = 'introspectionSchema.json';\n    return download(data, filename);\n  }\n}\n\nexports.downloadSchema = downloadSchema; // Performant option for downloading files\n\nfunction download(data, filename, mime) {\n  var blob = new Blob([data], {\n    type: mime || 'application/octet-stream'\n  });\n\n  if (typeof window.navigator.msSaveBlob !== 'undefined') {\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    var blobURL = window.URL.createObjectURL(blob);\n    var tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n\n    if (typeof tempLink.download === 'undefined') {\n      tempLink.setAttribute('target', '_blank');\n    }\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  }\n}","map":{"version":3,"sources":["/Users/wubo/Desktop/card-design/card-design/node_modules/graphql-playground-react/lib/components/Playground/util/createSDL.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","graphql_1","require","stack_1","utils_1","defaultTypes","sdlArray","schema","options","objectValues","values","obj","keys","map","key","typeMap","getTypeMap","types","sort","type1","type2","name","localeCompare","filter","type","includes","serialize","instanceOf","getTypeInstance","GraphQLInterfaceType","GraphQLUnionType","GraphQLEnumType","GraphQLInputObjectType","getSDL","commentsDisabled","GraphQLSchema","rawSdl","printSchema","commentDescriptions","prettify","printWidth","tabWidth","useTabs","downloadSchema","data","filename","download","JSON","stringify","mime","blob","Blob","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","tempLink","document","createElement","style","display","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar __assign = void 0 && (void 0).__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar graphql_1 = require(\"graphql\");\n\nvar stack_1 = require(\"./stack\");\n\nvar utils_1 = require(\"../../../utils\");\n\nvar defaultTypes = ['__Schema', '__Directive', '__DirectiveLocation', '__Type', '__Field', '__InputValue', '__EnumValue', '__TypeKind', 'String', 'ID', 'Boolean', 'Int', 'Float'];\n/* Creates an array of SchemaTypes for the SDLFieldDocs\n(A component that is similar to the DocsExplorer) to consume */\n\nfunction sdlArray(schema, options) {\n  var objectValues = Object.values || function (obj) {\n    return Object.keys(obj).map(function (key) {\n      return obj[key];\n    });\n  };\n\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(function (type) {\n    return !defaultTypes.includes(type.name);\n  }).map(function (type) {\n    return __assign(__assign(__assign({}, type), stack_1.serialize(schema, type)), {\n      instanceOf: getTypeInstance(type)\n    });\n  });\n  return types;\n}\n\nexports.sdlArray = sdlArray;\n\nfunction getTypeInstance(type) {\n  if (type instanceof graphql_1.GraphQLInterfaceType) {\n    return 'interface';\n  } else if (type instanceof graphql_1.GraphQLUnionType) {\n    return 'union';\n  } else if (type instanceof graphql_1.GraphQLEnumType) {\n    return 'enum';\n  } else if (type instanceof graphql_1.GraphQLInputObjectType) {\n    return 'input';\n  } else {\n    return 'type';\n  }\n} // Returns a prettified schema\n\n\nfunction getSDL(schema, commentsDisabled) {\n  if (commentsDisabled === void 0) {\n    commentsDisabled = true;\n  }\n\n  if (schema instanceof graphql_1.GraphQLSchema) {\n    var rawSdl = graphql_1.printSchema(schema, {\n      commentDescriptions: true\n    });\n\n    if (commentsDisabled) {\n      // Removes Comments but still has new lines\n      // Removes newlines left behind by Comments\n      return utils_1.prettify(rawSdl, {\n        printWidth: 80,\n        tabWidth: 2,\n        useTabs: false\n      });\n    }\n\n    return utils_1.prettify(rawSdl, {\n      printWidth: 80,\n      tabWidth: 2,\n      useTabs: false\n    });\n  }\n\n  return '';\n}\n\nexports.getSDL = getSDL; // Downloads the schema in either .json or .graphql format\n\nfunction downloadSchema(schema, type) {\n  if (type === 'sdl') {\n    var data = getSDL(schema, false);\n    var filename = 'schema.graphql';\n    return download(data, filename);\n  } else {\n    var data = JSON.stringify(schema);\n    var filename = 'introspectionSchema.json';\n    return download(data, filename);\n  }\n}\n\nexports.downloadSchema = downloadSchema; // Performant option for downloading files\n\nfunction download(data, filename, mime) {\n  var blob = new Blob([data], {\n    type: mime || 'application/octet-stream'\n  });\n\n  if (typeof window.navigator.msSaveBlob !== 'undefined') {\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    var blobURL = window.URL.createObjectURL(blob);\n    var tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n\n    if (typeof tempLink.download === 'undefined') {\n      tempLink.setAttribute('target', '_blank');\n    }\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  }\n}"]},"metadata":{},"sourceType":"script"}